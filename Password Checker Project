import requests
import hashlib


def request_api_data(query_char):
    url = 'https://api.pwnedpasswords.com/range/' + query_char
    res = requests.get(url)
    if res.status_code != 200:
        raise RuntimeError(f'Error fetching: {res.status_code}, check the api and try again')
    return res


def get_password_leaks_count(hashes, hash_to_check):
    hashes = (line.split(':') for line in hashes.text.splitlines())
    for h, count in hashes:
        if h == hash_to_check:
            return count
    return 0


def pwned_api_check(password):
    sha1password = hashlib.sha1(password.encode('utf-8')).hexdigest().upper()
    first5_char, tail = sha1password[:5], sha1password[5:]
    response = request_api_data(first5_char)
    return get_password_leaks_count(response, tail)


def results(args):
    for password in args:
        count = pwned_api_check(password)
        if count:
            print(f'{password} was found {count} times... you should probably change your password!')
        else:
            print(f'{password} was not found. Carry on!')
    return print('All provided passwords have been tested!')


def user_input_screen():
    while True:
        try:
            user_inputs = input(f'Enter Passwords seperated by a \';\' : ')
            passwords = (user_inputs.split(';'))
            tested_passwords = []
            for item in passwords:
                if ' ' in item and len(item) > 0:
                    stripped_item = item.strip()
                    if len(stripped_item) > 0:
                        tested_passwords.append(stripped_item)
                    else:
                        continue
                elif len(item) == 0:
                    continue
                elif len(item) == 1 and ' ' in item:
                    continue
                else:
                    tested_passwords.append(item)
            if len(tested_passwords) == 0:
                print('Please include one or more passwords!')
            else:
                return results(tested_passwords)
        except ValueError as err:
            print('Please try again')


if __name__ == '__main__':
    user_input_screen()
